<?xml version="1.0"?>
<doc>
    <assembly>
        <name>eZx</name>
    </assembly>
    <members>
        <member name="T:eZx.Database.DataField">
            <summary>
            数据表中每一个字段的信息，包括字段名称，数据类型，在Excel工作表中的列号等
            </summary>
        </member>
        <member name="P:eZx.Database.DataField.ColumnIndex">
            <summary> 此字段在数据库中的列号下标，比如第一列(A列)的数据的ColumnIndex为1。
            在Excel 2010中，最大的列号为16384=2^14。 </summary>
        </member>
        <member name="P:eZx.Database.DataField.Name">
            <summary> 字段名称 </summary>
        </member>
        <member name="P:eZx.Database.DataField.DataType">
            <summary> 此列数据的类型 </summary>
        </member>
        <member name="P:eZx.Database.DataField.NullAllowed">
            <summary> 是否允许空值，如果为False，则会自动将其设置为其默认值 </summary>
        </member>
        <member name="M:eZx.Database.DataField.#ctor(System.String,System.UInt16,eZx.Database.eZDataType,System.Boolean)">
            <summary>构造函数</summary>
             <param name="fieldName">字段名称</param>
             <param name="columnIndex">此字段在数据库中的列号下标，比如第一列(A列)的数据的ColumnIndex为1。
             在Excel 2010中，最大的列号为16384=2^14。 </param>
             <param name="dataType">此列的数据类型</param>
             <param name="nullAllowed">是否允许有空值</param>
             <remarks></remarks>
        </member>
        <member name="M:eZx.Database.DataField.IsCompatible(System.String,eZx.Database.eZDataType)">
            <summary> 检查指定的数据是否符合指定的数据类型 </summary>
            <param name="data"> 要进行检测的任意字符 </param>
            <param name="ezType"></param>
            <returns></returns>
        </member>
        <member name="T:eZx.Database.DataSheet">
            <summary> 数据库中的某一张数据表 </summary>
        </member>
        <member name="P:eZx.Database.DataSheet.WorkSheet">
            <summary>
            代表此数据库的工作表对象
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="F:eZx.Database.DataSheet.F_IsFormated">
            <summary>
            此工作表是否符合数据库的格式规范
            </summary>
        </member>
        <member name="P:eZx.Database.DataSheet.FieldType">
            <summary> 此字段名称本身的数据类型。
             一般情况下，一个字段的名称只要是一个字符就可以了，但是它也可以代表具体的含义，比如在具体某一天的日期“2016/2/6” </summary>
        </member>
        <member name="M:eZx.Database.DataSheet.#ctor(Microsoft.Office.Interop.Excel.Worksheet,System.ComponentModel.BindingList{eZx.Database.DataField},eZx.Database.eZDataType)">
            <summary>
            构造函数
            </summary>
            <param name="WkSheet"></param>
            <param name="List_FieldInfo"></param>
            <param name="FieldType">字段名称本身的数据类型, 一般情况下，一个字段的名称只要是一个字符就可以了，
            但是它也可以代表具体的含义，比如在具体某一天的日期“2016/2/6” </param>
            <remarks></remarks>
        </member>
        <member name="T:eZx.Database.eZDataType">
            <summary> Excel中可以辨别的数据类型，用来进行字段名或者某字段下的数据的类别判断 </summary>
        </member>
        <member name="F:eZx.Database.Form_ConstructDatabase._isConstructingMode">
            <summary>
            当前窗口是否处于“构造数据库”的模式，如果为False，则为“编辑数据库”的模式
            </summary>
        </member>
        <member name="F:eZx.Database.Form_ConstructDatabase._dataValue">
            <summary>
            Worksheet.UsedRange.Value所返回的值，此二维数组中，左上角的第一个元素的下标值为(1,1)
            </summary>
            <remarks>此二维数组中包含了字段信息以及每一个字段中的数据</remarks>
        </member>
        <member name="F:eZx.Database.Form_ConstructDatabase._fieldType">
            <summary> 此字段名称本身的数据类型。
             一般情况下，一个字段的名称只要是一个字符就可以了，但是它也可以代表具体的含义，比如在具体某一天的日期“2016/2/6” </summary>
        </member>
        <member name="M:eZx.Database.Form_ConstructDatabase.#ctor(Microsoft.Office.Interop.Excel.Worksheet,System.Boolean,eZx.Database.DataSheet)">
             <summary> 构造函数 </summary>
             <param name="Sheet"></param>
             <param name="ConstructingMode">当前窗口是否处于“构造数据库”的模式，如果为False，则为“编辑数据库”的模式</param>
            <param name="DataSheet">当以“构造数据库”模式打开时，此参数可不赋值；当以“编辑数据库”模式打开式，此参数为对应的活动数据库。</param>
             <remarks></remarks>
        </member>
        <member name="M:eZx.Database.Form_ConstructDatabase.ConstructDataBase">
            <summary>
            构造数据库
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:eZx.Database.Form_ConstructDatabase.EditDataBase(eZx.Database.DataSheet)">
            <summary>
            编辑数据库
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:eZx.Database.Form_ConstructDatabase.CheckAllFields">
            <summary>
            ! 检验所有的字段，完成数据库的构造或者编辑
            </summary>
        </member>
        <member name="M:eZx.Database.Form_ConstructDatabase.ValidateOneField(eZx.Database.DataField,System.Object[0:,0:]@,System.UInt32@)">
            <summary>
            同时检验一个字段的名称的数据类型，以及此字段的此列数据的数据类型
            </summary>
            <param name="field">某一个字段</param>
            <param name="value">整个数据表的数据（包含字段），数组中的第一个元素的下标为1</param>
            <param name="errorRow">如果校验成功，则返回0，否则返回不符合数据格式的那一行的行号。字段名本身的行号为1，此字段的第一个数据的行号为2。</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:eZx.Database.Form_ConstructDatabase.ValidateFieldValueDataType(eZx.Database.DataField,System.Object[0:,0:],System.UInt32@)">
            <summary>
            检验某一字段的一列数据的数据类型
            </summary>
            <param name="field">字段信息</param>
            <param name="value">整个数据表的数据（包含字段），数组中的第一个元素的下标为1</param>
            <param name="errorRow">如果校验成功，则返回0，否则返回不符合数据格式的那一行的行号。字段名本身的行号为1，此字段的第一个数据的行号为2。</param>
            <returns></returns>
        </member>
        <member name="M:eZx.Database.Form_ConstructDatabase.ValidateFieldType(eZx.Database.DataField)">
            <summary>
            检查某一字段的名称本身的数据类型
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:eZx.Database.Form_ConstructDatabase.eZDataGridView1_CellContentClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary> 点击表格控件中的单元格中的对象 </summary>
        </member>
        <member name="F:eZx.Ribbon_eZx.F_DbSheets">
            <summary>
            此Application中所有的数据库工作表
            </summary>
        </member>
        <member name="P:eZx.Ribbon_eZx.ActiveDatabaseSheet">
            <summary> 此Application中的活动数据库。 </summary>
            <remarks>如果当前活动的Excel工作表是一个符合格式的数据库工作表，
            则此属性指向此对应的数据库对象，否则，返回Nothing。</remarks>
        </member>
        <member name="F:eZx.Ribbon_eZx._app">
            <summary>
            当前正在运行的Excel程序
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:eZx.Ribbon_eZx._tempWkbk">
            <summary>
            用来临时保存数据的工作簿
            </summary>
            <remarks>此工作簿用来保存各种临时数据，比如从图表中提取出来的数据情况</remarks>
        </member>
        <member name="F:eZx.Ribbon_eZx.path_Tempwkbk">
            <summary>
            用来临时保存数据的工作簿的文件路径
            </summary>
            <remarks>此工作簿位于桌面上的“tempData.xlsx”</remarks>
        </member>
        <member name="F:eZx.Ribbon_eZx.Para1">
            <summary> 供各项命令使用的第一个基本参数，此字段值会由TextChange事件而自动修改。 </summary>
        </member>
        <member name="F:eZx.Ribbon_eZx.Para2">
            <summary> 供各项命令使用的第二个基本参数 </summary>
        </member>
        <member name="F:eZx.Ribbon_eZx.Para3">
            <summary> 供各项命令使用的第三个基本参数 </summary>
        </member>
        <member name="M:eZx.Ribbon_eZx.Ribbon_zfy_Load(System.Object,Microsoft.Office.Tools.Ribbon.RibbonUIEventArgs)">
            <summary> 构造函数 </summary>
        </member>
        <member name="M:eZx.Ribbon_eZx.btn_DataRange_Click(System.Object,Microsoft.Office.Tools.Ribbon.RibbonControlEventArgs)">
            <summary> 显示工作表中的UsedRange的范围 </summary>
        </member>
        <member name="M:eZx.Ribbon_eZx.ButtonValue_Click(System.Object,Microsoft.Office.Tools.Ribbon.RibbonControlEventArgs)">
            <summary> 显示工作表中的UsedRange的范围 </summary>
        </member>
        <member name="M:eZx.Ribbon_eZx.btnConstructDatabase_Click(System.Object,Microsoft.Office.Tools.Ribbon.RibbonControlEventArgs)">
            <summary>
            准备构造一个数据库
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:eZx.Ribbon_eZx.ConstructDatabase">
            <summary>
            构造数据库
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:eZx.Ribbon_eZx.btnEditDatabase_Click(System.Object,Microsoft.Office.Tools.Ribbon.RibbonControlEventArgs)">
            <summary>
            准备编辑数据库
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <remarks></remarks>
        </member>
        <member name="M:eZx.Ribbon_eZx.CorrespondingInCollection(Microsoft.Office.Interop.Excel.Worksheet,System.Collections.Generic.List{eZx.Database.DataSheet})">
            <summary>
            找出某工作表在数据库集合中所对应的那一项，如果没有对应项，则返回Nothing
            </summary>
            <param name="DataSheet">要进行匹配的Excel工作表</param>
            <param name="DatasheetCollection">要进行搜索的数据库集合。</param>
        </member>
        <member name="M:eZx.Ribbon_eZx.btn_ExtractDataFromChart_Click(System.Object,Microsoft.Office.Tools.Ribbon.RibbonControlEventArgs)">
            <summary>
            提取图表中的数据
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <remarks></remarks>
        </member>
        <member name="M:eZx.Ribbon_eZx.btnReArrange_Click(System.Object,Microsoft.Office.Tools.Ribbon.RibbonControlEventArgs)">
            <summary> 进行数据的重新排列 </summary>
        </member>
        <member name="M:eZx.Ribbon_eZx.btnShrink_Click(System.Object,Microsoft.Office.Tools.Ribbon.RibbonControlEventArgs)">
            <summary>
            消除空行
            </summary>
        </member>
        <member name="M:eZx.Ribbon_eZx.DataReshape(System.Object,Microsoft.Office.Tools.Ribbon.RibbonControlEventArgs)">
            <summary> 数据重排 </summary>
            <remarks>  请在P1中输入新的行数，P2中输入新的列数。
            在进行重排时，全先将所有的数据排成一列，然后再进行重排。</remarks>
        </member>
        <member name="M:eZx.Ribbon_eZx.GetDataListFromTable(System.Object[0:,0:],System.Boolean,System.UInt32@)">
            <summary>
            将Excel中的二维表格数据转换为一个向量
            </summary>
            <param name="Table">要进行数据转换的二维表格</param>
            <param name="DeleteNull">是否要删除每一列结尾处的多个空数据。</param>
            <param name="ValidDataCount">返回的向量中的有效数据的个数，如果DeleteNull的值为False，则其值与二维表格Table中的元素个数相同。</param>
            <returns>一个向量，其中的元素个数与Table中的元素个数相同，但是只有 ValidDataCount 个有效数据</returns>
            <remarks></remarks>
        </member>
        <member name="M:eZx.Ribbon_eZx.Transpose(Microsoft.Office.Interop.Excel.Range)">
            <summary> 保持Range 区域的左上角不变，对整个区域进行行列转转置 </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:eZx.Ribbon_eZx.ExcelApp_SheetActivate(System.Object)">
            <summary>
             激活一个新的工作表
            </summary>
        </member>
        <member name="F:eZx.Ribbon_eZx.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:eZx.Ribbon_eZx.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:eZx.Ribbon_eZx.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:eZx.HelpLocation">
            <summary>
            帮助文档的位置
            </summary>
        </member>
        <member name="T:eZx.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:eZx.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:eZx.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:eZx.Properties.Resources.binary">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:eZx.Properties.Resources.DynamicDebug">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:eZx.RibbonHandler.ChartHandler">
            <summary>
            与图表相关的操作
            </summary>
        </member>
        <member name="M:eZx.RibbonHandler.ChartHandler.GetUniqueInstance(Microsoft.Office.Interop.Excel.Chart)">
            <summary> 获取一个唯一的实例对象 </summary>
            <param name="chart"></param>
            <returns></returns>
        </member>
        <member name="M:eZx.RibbonHandler.ChartHandler.#ctor(Microsoft.Office.Interop.Excel.Chart)">
            <summary> 构造函数 </summary>
            <param name="chart"></param>
        </member>
        <member name="M:eZx.RibbonHandler.ChartHandler.XYExchange">
            <summary>
            交换Excel中活动Chart中的每一条数据曲线的X轴与Y轴
            </summary>
        </member>
        <member name="F:eZx.RibbonHandler.ChartHandler._tempWkbk">
            <summary>
            用来临时保存数据的工作簿
            </summary>
            <remarks>此工作簿用来保存各种临时数据，比如从图表中提取出来的数据情况</remarks>
        </member>
        <member name="F:eZx.RibbonHandler.ChartHandler._path_desktop">
            <summary>
            用来临时保存数据的工作簿的文件路径
            </summary>
            <remarks>此工作簿位于桌面上的“tempData.xlsx”</remarks>
        </member>
        <member name="M:eZx.RibbonHandler.ChartHandler.ExtractDataFromChart">
            <summary> 提取图表中的数据 </summary>
            <remarks></remarks>
        </member>
        <member name="T:eZx.ThisRibbonCollection">
            
        </member>
        <member name="M:eZx.ThisRibbonCollection.#ctor(Microsoft.Office.Tools.Ribbon.RibbonFactory)">
            
        </member>
        <member name="T:eZx.ThisAddIn">
            
        </member>
        <member name="M:eZx.ThisAddIn.InternalStartup">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:eZx.ThisAddIn.#ctor(Microsoft.Office.Tools.Excel.ApplicationFactory,System.IServiceProvider)">
            
        </member>
        <member name="M:eZx.ThisAddIn.Initialize">
            
        </member>
        <member name="M:eZx.ThisAddIn.FinishInitialization">
            
        </member>
        <member name="M:eZx.ThisAddIn.InitializeDataBindings">
            
        </member>
        <member name="M:eZx.ThisAddIn.InitializeCachedData">
            
        </member>
        <member name="M:eZx.ThisAddIn.InitializeData">
            
        </member>
        <member name="M:eZx.ThisAddIn.BindToData">
            
        </member>
        <member name="M:eZx.ThisAddIn.StartCaching(System.String)">
            
        </member>
        <member name="M:eZx.ThisAddIn.StopCaching(System.String)">
            
        </member>
        <member name="M:eZx.ThisAddIn.IsCached(System.String)">
            
        </member>
        <member name="M:eZx.ThisAddIn.BeginInitialization">
            
        </member>
        <member name="M:eZx.ThisAddIn.EndInitialization">
            
        </member>
        <member name="M:eZx.ThisAddIn.InitializeControls">
            
        </member>
        <member name="M:eZx.ThisAddIn.InitializeComponents">
            
        </member>
        <member name="M:eZx.ThisAddIn.NeedsFill(System.String)">
            
        </member>
        <member name="M:eZx.ThisAddIn.OnShutdown">
            
        </member>
        <member name="T:eZx.Globals">
            
        </member>
        <member name="M:eZx.Globals.#ctor">
            
        </member>
    </members>
</doc>
